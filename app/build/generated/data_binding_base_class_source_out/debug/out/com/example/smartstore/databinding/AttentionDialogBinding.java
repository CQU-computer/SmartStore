// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AttentionDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView attentionButtonNotText;

  @NonNull
  public final TextView attentionButtonText;

  @NonNull
  public final TextView attentionContent;

  @NonNull
  public final ImageView attentionDialog;

  @NonNull
  public final TextView attentionTitle;

  @NonNull
  public final Guideline layoutLine1;

  @NonNull
  public final Guideline layoutLine2;

  @NonNull
  public final Guideline layoutLine3;

  @NonNull
  public final Guideline layoutLine4;

  @NonNull
  public final Guideline layoutLine5;

  @NonNull
  public final LinearLayout linearLayout2;

  private AttentionDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView attentionButtonNotText, @NonNull TextView attentionButtonText,
      @NonNull TextView attentionContent, @NonNull ImageView attentionDialog,
      @NonNull TextView attentionTitle, @NonNull Guideline layoutLine1,
      @NonNull Guideline layoutLine2, @NonNull Guideline layoutLine3,
      @NonNull Guideline layoutLine4, @NonNull Guideline layoutLine5,
      @NonNull LinearLayout linearLayout2) {
    this.rootView = rootView;
    this.attentionButtonNotText = attentionButtonNotText;
    this.attentionButtonText = attentionButtonText;
    this.attentionContent = attentionContent;
    this.attentionDialog = attentionDialog;
    this.attentionTitle = attentionTitle;
    this.layoutLine1 = layoutLine1;
    this.layoutLine2 = layoutLine2;
    this.layoutLine3 = layoutLine3;
    this.layoutLine4 = layoutLine4;
    this.layoutLine5 = layoutLine5;
    this.linearLayout2 = linearLayout2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AttentionDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AttentionDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.attention_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AttentionDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attention_button_not_text;
      TextView attentionButtonNotText = ViewBindings.findChildViewById(rootView, id);
      if (attentionButtonNotText == null) {
        break missingId;
      }

      id = R.id.attention_button_text;
      TextView attentionButtonText = ViewBindings.findChildViewById(rootView, id);
      if (attentionButtonText == null) {
        break missingId;
      }

      id = R.id.attention_content;
      TextView attentionContent = ViewBindings.findChildViewById(rootView, id);
      if (attentionContent == null) {
        break missingId;
      }

      id = R.id.attention_dialog;
      ImageView attentionDialog = ViewBindings.findChildViewById(rootView, id);
      if (attentionDialog == null) {
        break missingId;
      }

      id = R.id.attention_Title;
      TextView attentionTitle = ViewBindings.findChildViewById(rootView, id);
      if (attentionTitle == null) {
        break missingId;
      }

      id = R.id.layout_line_1;
      Guideline layoutLine1 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLine1 == null) {
        break missingId;
      }

      id = R.id.layout_line_2;
      Guideline layoutLine2 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLine2 == null) {
        break missingId;
      }

      id = R.id.layout_line_3;
      Guideline layoutLine3 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLine3 == null) {
        break missingId;
      }

      id = R.id.layout_line_4;
      Guideline layoutLine4 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLine4 == null) {
        break missingId;
      }

      id = R.id.layout_line_5;
      Guideline layoutLine5 = ViewBindings.findChildViewById(rootView, id);
      if (layoutLine5 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      return new AttentionDialogBinding((ConstraintLayout) rootView, attentionButtonNotText,
          attentionButtonText, attentionContent, attentionDialog, attentionTitle, layoutLine1,
          layoutLine2, layoutLine3, layoutLine4, layoutLine5, linearLayout2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
