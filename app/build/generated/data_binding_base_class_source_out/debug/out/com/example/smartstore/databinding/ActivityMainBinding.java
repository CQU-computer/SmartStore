// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView StgNum;

  @NonNull
  public final Button cameraBtn;

  @NonNull
  public final TextView familyNum;

  @NonNull
  public final TextView help1;

  @NonNull
  public final ImageView helpMain;

  @NonNull
  public final ImageView imageView13;

  @NonNull
  public final ImageView imageView14;

  @NonNull
  public final ImageView imageView15;

  @NonNull
  public final ImageView imageView18;

  @NonNull
  public final TextView itemNum;

  @NonNull
  public final LinearLayout linearLayout15;

  @NonNull
  public final LinearLayout linearLayout18;

  @NonNull
  public final LinearLayout linearLayout20;

  @NonNull
  public final Button manageBtn;

  @NonNull
  public final TextView oneTOfour;

  @NonNull
  public final TextView oneTOthree;

  @NonNull
  public final TextView oneTOtwo;

  @NonNull
  public final Guideline part31;

  @NonNull
  public final Guideline part32;

  @NonNull
  public final Guideline part33;

  @NonNull
  public final Guideline part34;

  @NonNull
  public final Guideline part35;

  @NonNull
  public final Button recordBtn;

  @NonNull
  public final ScrollView scrollView3;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final TextView textView11;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull TextView StgNum,
      @NonNull Button cameraBtn, @NonNull TextView familyNum, @NonNull TextView help1,
      @NonNull ImageView helpMain, @NonNull ImageView imageView13, @NonNull ImageView imageView14,
      @NonNull ImageView imageView15, @NonNull ImageView imageView18, @NonNull TextView itemNum,
      @NonNull LinearLayout linearLayout15, @NonNull LinearLayout linearLayout18,
      @NonNull LinearLayout linearLayout20, @NonNull Button manageBtn, @NonNull TextView oneTOfour,
      @NonNull TextView oneTOthree, @NonNull TextView oneTOtwo, @NonNull Guideline part31,
      @NonNull Guideline part32, @NonNull Guideline part33, @NonNull Guideline part34,
      @NonNull Guideline part35, @NonNull Button recordBtn, @NonNull ScrollView scrollView3,
      @NonNull Button searchBtn, @NonNull TextView textView11) {
    this.rootView = rootView;
    this.StgNum = StgNum;
    this.cameraBtn = cameraBtn;
    this.familyNum = familyNum;
    this.help1 = help1;
    this.helpMain = helpMain;
    this.imageView13 = imageView13;
    this.imageView14 = imageView14;
    this.imageView15 = imageView15;
    this.imageView18 = imageView18;
    this.itemNum = itemNum;
    this.linearLayout15 = linearLayout15;
    this.linearLayout18 = linearLayout18;
    this.linearLayout20 = linearLayout20;
    this.manageBtn = manageBtn;
    this.oneTOfour = oneTOfour;
    this.oneTOthree = oneTOthree;
    this.oneTOtwo = oneTOtwo;
    this.part31 = part31;
    this.part32 = part32;
    this.part33 = part33;
    this.part34 = part34;
    this.part35 = part35;
    this.recordBtn = recordBtn;
    this.scrollView3 = scrollView3;
    this.searchBtn = searchBtn;
    this.textView11 = textView11;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.StgNum;
      TextView StgNum = ViewBindings.findChildViewById(rootView, id);
      if (StgNum == null) {
        break missingId;
      }

      id = R.id.camera_btn;
      Button cameraBtn = ViewBindings.findChildViewById(rootView, id);
      if (cameraBtn == null) {
        break missingId;
      }

      id = R.id.familyNum;
      TextView familyNum = ViewBindings.findChildViewById(rootView, id);
      if (familyNum == null) {
        break missingId;
      }

      id = R.id.help1;
      TextView help1 = ViewBindings.findChildViewById(rootView, id);
      if (help1 == null) {
        break missingId;
      }

      id = R.id.help_main;
      ImageView helpMain = ViewBindings.findChildViewById(rootView, id);
      if (helpMain == null) {
        break missingId;
      }

      id = R.id.imageView13;
      ImageView imageView13 = ViewBindings.findChildViewById(rootView, id);
      if (imageView13 == null) {
        break missingId;
      }

      id = R.id.imageView14;
      ImageView imageView14 = ViewBindings.findChildViewById(rootView, id);
      if (imageView14 == null) {
        break missingId;
      }

      id = R.id.imageView15;
      ImageView imageView15 = ViewBindings.findChildViewById(rootView, id);
      if (imageView15 == null) {
        break missingId;
      }

      id = R.id.imageView18;
      ImageView imageView18 = ViewBindings.findChildViewById(rootView, id);
      if (imageView18 == null) {
        break missingId;
      }

      id = R.id.itemNum;
      TextView itemNum = ViewBindings.findChildViewById(rootView, id);
      if (itemNum == null) {
        break missingId;
      }

      id = R.id.linearLayout15;
      LinearLayout linearLayout15 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout15 == null) {
        break missingId;
      }

      id = R.id.linearLayout18;
      LinearLayout linearLayout18 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout18 == null) {
        break missingId;
      }

      id = R.id.linearLayout20;
      LinearLayout linearLayout20 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout20 == null) {
        break missingId;
      }

      id = R.id.manage_btn;
      Button manageBtn = ViewBindings.findChildViewById(rootView, id);
      if (manageBtn == null) {
        break missingId;
      }

      id = R.id.oneTOfour;
      TextView oneTOfour = ViewBindings.findChildViewById(rootView, id);
      if (oneTOfour == null) {
        break missingId;
      }

      id = R.id.oneTOthree;
      TextView oneTOthree = ViewBindings.findChildViewById(rootView, id);
      if (oneTOthree == null) {
        break missingId;
      }

      id = R.id.oneTOtwo;
      TextView oneTOtwo = ViewBindings.findChildViewById(rootView, id);
      if (oneTOtwo == null) {
        break missingId;
      }

      id = R.id.part31;
      Guideline part31 = ViewBindings.findChildViewById(rootView, id);
      if (part31 == null) {
        break missingId;
      }

      id = R.id.part32;
      Guideline part32 = ViewBindings.findChildViewById(rootView, id);
      if (part32 == null) {
        break missingId;
      }

      id = R.id.part33;
      Guideline part33 = ViewBindings.findChildViewById(rootView, id);
      if (part33 == null) {
        break missingId;
      }

      id = R.id.part34;
      Guideline part34 = ViewBindings.findChildViewById(rootView, id);
      if (part34 == null) {
        break missingId;
      }

      id = R.id.part35;
      Guideline part35 = ViewBindings.findChildViewById(rootView, id);
      if (part35 == null) {
        break missingId;
      }

      id = R.id.record_btn;
      Button recordBtn = ViewBindings.findChildViewById(rootView, id);
      if (recordBtn == null) {
        break missingId;
      }

      id = R.id.scrollView3;
      ScrollView scrollView3 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView3 == null) {
        break missingId;
      }

      id = R.id.search_btn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, StgNum, cameraBtn, familyNum,
          help1, helpMain, imageView13, imageView14, imageView15, imageView18, itemNum,
          linearLayout15, linearLayout18, linearLayout20, manageBtn, oneTOfour, oneTOthree,
          oneTOtwo, part31, part32, part33, part34, part35, recordBtn, scrollView3, searchBtn,
          textView11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
