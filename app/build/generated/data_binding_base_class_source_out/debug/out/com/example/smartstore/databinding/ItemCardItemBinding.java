// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCardItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final HorizontalScrollView display;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final Guideline part28;

  @NonNull
  public final Guideline part29;

  @NonNull
  public final Guideline part30;

  @NonNull
  public final ImageView searchCardBlue;

  @NonNull
  public final ImageView searchCardGreen;

  @NonNull
  public final TextView textViewCardName;

  private ItemCardItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull HorizontalScrollView display, @NonNull LinearLayout linearLayout,
      @NonNull Guideline part28, @NonNull Guideline part29, @NonNull Guideline part30,
      @NonNull ImageView searchCardBlue, @NonNull ImageView searchCardGreen,
      @NonNull TextView textViewCardName) {
    this.rootView = rootView;
    this.display = display;
    this.linearLayout = linearLayout;
    this.part28 = part28;
    this.part29 = part29;
    this.part30 = part30;
    this.searchCardBlue = searchCardBlue;
    this.searchCardGreen = searchCardGreen;
    this.textViewCardName = textViewCardName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCardItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCardItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_card_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCardItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.display;
      HorizontalScrollView display = ViewBindings.findChildViewById(rootView, id);
      if (display == null) {
        break missingId;
      }

      id = R.id.linear_layout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.part28;
      Guideline part28 = ViewBindings.findChildViewById(rootView, id);
      if (part28 == null) {
        break missingId;
      }

      id = R.id.part29;
      Guideline part29 = ViewBindings.findChildViewById(rootView, id);
      if (part29 == null) {
        break missingId;
      }

      id = R.id.part30;
      Guideline part30 = ViewBindings.findChildViewById(rootView, id);
      if (part30 == null) {
        break missingId;
      }

      id = R.id.search_card_blue;
      ImageView searchCardBlue = ViewBindings.findChildViewById(rootView, id);
      if (searchCardBlue == null) {
        break missingId;
      }

      id = R.id.search_card_green;
      ImageView searchCardGreen = ViewBindings.findChildViewById(rootView, id);
      if (searchCardGreen == null) {
        break missingId;
      }

      id = R.id.textViewCardName;
      TextView textViewCardName = ViewBindings.findChildViewById(rootView, id);
      if (textViewCardName == null) {
        break missingId;
      }

      return new ItemCardItemBinding((ConstraintLayout) rootView, display, linearLayout, part28,
          part29, part30, searchCardBlue, searchCardGreen, textViewCardName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
