// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WaterfallFixedItem1Binding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button buttonFollow;

  @NonNull
  public final Button buttonMessage;

  @NonNull
  public final Button buttonPublish;

  @NonNull
  public final ImageView fixedImage;

  private WaterfallFixedItem1Binding(@NonNull FrameLayout rootView, @NonNull Button buttonFollow,
      @NonNull Button buttonMessage, @NonNull Button buttonPublish, @NonNull ImageView fixedImage) {
    this.rootView = rootView;
    this.buttonFollow = buttonFollow;
    this.buttonMessage = buttonMessage;
    this.buttonPublish = buttonPublish;
    this.fixedImage = fixedImage;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WaterfallFixedItem1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WaterfallFixedItem1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.waterfall_fixed_item1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WaterfallFixedItem1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_follow;
      Button buttonFollow = ViewBindings.findChildViewById(rootView, id);
      if (buttonFollow == null) {
        break missingId;
      }

      id = R.id.button_message;
      Button buttonMessage = ViewBindings.findChildViewById(rootView, id);
      if (buttonMessage == null) {
        break missingId;
      }

      id = R.id.button_publish;
      Button buttonPublish = ViewBindings.findChildViewById(rootView, id);
      if (buttonPublish == null) {
        break missingId;
      }

      id = R.id.fixed_image;
      ImageView fixedImage = ViewBindings.findChildViewById(rootView, id);
      if (fixedImage == null) {
        break missingId;
      }

      return new WaterfallFixedItem1Binding((FrameLayout) rootView, buttonFollow, buttonMessage,
          buttonPublish, fixedImage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
