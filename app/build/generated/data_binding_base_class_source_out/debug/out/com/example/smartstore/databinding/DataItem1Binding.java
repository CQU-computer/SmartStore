// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DataItem1Binding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView bell;

  @NonNull
  public final ImageView dateIndex;

  @NonNull
  public final TextView rcdDay;

  @NonNull
  public final TextView rcdWeek;

  @NonNull
  public final ImageView rest;

  private DataItem1Binding(@NonNull LinearLayout rootView, @NonNull ImageView bell,
      @NonNull ImageView dateIndex, @NonNull TextView rcdDay, @NonNull TextView rcdWeek,
      @NonNull ImageView rest) {
    this.rootView = rootView;
    this.bell = bell;
    this.dateIndex = dateIndex;
    this.rcdDay = rcdDay;
    this.rcdWeek = rcdWeek;
    this.rest = rest;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DataItem1Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DataItem1Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.data_item1, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DataItem1Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bell;
      ImageView bell = ViewBindings.findChildViewById(rootView, id);
      if (bell == null) {
        break missingId;
      }

      id = R.id.date_index;
      ImageView dateIndex = ViewBindings.findChildViewById(rootView, id);
      if (dateIndex == null) {
        break missingId;
      }

      id = R.id.rcd_day;
      TextView rcdDay = ViewBindings.findChildViewById(rootView, id);
      if (rcdDay == null) {
        break missingId;
      }

      id = R.id.rcd_week;
      TextView rcdWeek = ViewBindings.findChildViewById(rootView, id);
      if (rcdWeek == null) {
        break missingId;
      }

      id = R.id.rest;
      ImageView rest = ViewBindings.findChildViewById(rootView, id);
      if (rest == null) {
        break missingId;
      }

      return new DataItem1Binding((LinearLayout) rootView, bell, dateIndex, rcdDay, rcdWeek, rest);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
