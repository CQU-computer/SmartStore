// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button gotoChangeLayout;

  @NonNull
  public final Button hlpSearch;

  @NonNull
  public final TextView layoutName;

  @NonNull
  public final LinearLayout part19;

  @NonNull
  public final ConstraintLayout partTest;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final ScrollView scrollView2;

  @NonNull
  public final ImageView searchBar;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final Button searchReturnBtn;

  @NonNull
  public final TextView searchTips;

  @NonNull
  public final ImageView searchTitle;

  @NonNull
  public final EditText searchTxt;

  private SearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button gotoChangeLayout,
      @NonNull Button hlpSearch, @NonNull TextView layoutName, @NonNull LinearLayout part19,
      @NonNull ConstraintLayout partTest, @NonNull RecyclerView recyclerView,
      @NonNull ScrollView scrollView2, @NonNull ImageView searchBar, @NonNull Button searchBtn,
      @NonNull Button searchReturnBtn, @NonNull TextView searchTips, @NonNull ImageView searchTitle,
      @NonNull EditText searchTxt) {
    this.rootView = rootView;
    this.gotoChangeLayout = gotoChangeLayout;
    this.hlpSearch = hlpSearch;
    this.layoutName = layoutName;
    this.part19 = part19;
    this.partTest = partTest;
    this.recyclerView = recyclerView;
    this.scrollView2 = scrollView2;
    this.searchBar = searchBar;
    this.searchBtn = searchBtn;
    this.searchReturnBtn = searchReturnBtn;
    this.searchTips = searchTips;
    this.searchTitle = searchTitle;
    this.searchTxt = searchTxt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SearchBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.goto_change_layout;
      Button gotoChangeLayout = ViewBindings.findChildViewById(rootView, id);
      if (gotoChangeLayout == null) {
        break missingId;
      }

      id = R.id.hlp_search;
      Button hlpSearch = ViewBindings.findChildViewById(rootView, id);
      if (hlpSearch == null) {
        break missingId;
      }

      id = R.id.layout_name;
      TextView layoutName = ViewBindings.findChildViewById(rootView, id);
      if (layoutName == null) {
        break missingId;
      }

      id = R.id.part_19;
      LinearLayout part19 = ViewBindings.findChildViewById(rootView, id);
      if (part19 == null) {
        break missingId;
      }

      ConstraintLayout partTest = (ConstraintLayout) rootView;

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      id = R.id.search_bar;
      ImageView searchBar = ViewBindings.findChildViewById(rootView, id);
      if (searchBar == null) {
        break missingId;
      }

      id = R.id.search_btn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.search_return_btn;
      Button searchReturnBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchReturnBtn == null) {
        break missingId;
      }

      id = R.id.search_tips;
      TextView searchTips = ViewBindings.findChildViewById(rootView, id);
      if (searchTips == null) {
        break missingId;
      }

      id = R.id.search_title;
      ImageView searchTitle = ViewBindings.findChildViewById(rootView, id);
      if (searchTitle == null) {
        break missingId;
      }

      id = R.id.search_txt;
      EditText searchTxt = ViewBindings.findChildViewById(rootView, id);
      if (searchTxt == null) {
        break missingId;
      }

      return new SearchBinding((ConstraintLayout) rootView, gotoChangeLayout, hlpSearch, layoutName,
          part19, partTest, recyclerView, scrollView2, searchBar, searchBtn, searchReturnBtn,
          searchTips, searchTitle, searchTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
