// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import search.CardLinearLayout;

public final class ItemListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardLinearLayout cardLayout;

  @NonNull
  public final TextView itN;

  @NonNull
  public final TextView nextRoomTitle;

  @NonNull
  public final LinearLayout part14;

  @NonNull
  public final LinearLayout part15;

  @NonNull
  public final LinearLayout part17;

  @NonNull
  public final TextView roomTitle;

  @NonNull
  public final Button searchAddItems;

  @NonNull
  public final ImageView searchArrowBlue;

  @NonNull
  public final ImageView searchArrowGreen;

  @NonNull
  public final ImageView searchListTitle;

  @NonNull
  public final ImageView searchSpaceBlue;

  @NonNull
  public final ImageView searchSpaceGreen;

  @NonNull
  public final ScrollView singleContainer;

  @NonNull
  public final TextView stgN;

  @NonNull
  public final TextView strN;

  @NonNull
  public final RelativeLayout textView;

  private ItemListBinding(@NonNull RelativeLayout rootView, @NonNull CardLinearLayout cardLayout,
      @NonNull TextView itN, @NonNull TextView nextRoomTitle, @NonNull LinearLayout part14,
      @NonNull LinearLayout part15, @NonNull LinearLayout part17, @NonNull TextView roomTitle,
      @NonNull Button searchAddItems, @NonNull ImageView searchArrowBlue,
      @NonNull ImageView searchArrowGreen, @NonNull ImageView searchListTitle,
      @NonNull ImageView searchSpaceBlue, @NonNull ImageView searchSpaceGreen,
      @NonNull ScrollView singleContainer, @NonNull TextView stgN, @NonNull TextView strN,
      @NonNull RelativeLayout textView) {
    this.rootView = rootView;
    this.cardLayout = cardLayout;
    this.itN = itN;
    this.nextRoomTitle = nextRoomTitle;
    this.part14 = part14;
    this.part15 = part15;
    this.part17 = part17;
    this.roomTitle = roomTitle;
    this.searchAddItems = searchAddItems;
    this.searchArrowBlue = searchArrowBlue;
    this.searchArrowGreen = searchArrowGreen;
    this.searchListTitle = searchListTitle;
    this.searchSpaceBlue = searchSpaceBlue;
    this.searchSpaceGreen = searchSpaceGreen;
    this.singleContainer = singleContainer;
    this.stgN = stgN;
    this.strN = strN;
    this.textView = textView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardLayout;
      CardLinearLayout cardLayout = ViewBindings.findChildViewById(rootView, id);
      if (cardLayout == null) {
        break missingId;
      }

      id = R.id.it_n;
      TextView itN = ViewBindings.findChildViewById(rootView, id);
      if (itN == null) {
        break missingId;
      }

      id = R.id.next_room_title;
      TextView nextRoomTitle = ViewBindings.findChildViewById(rootView, id);
      if (nextRoomTitle == null) {
        break missingId;
      }

      id = R.id.part_14;
      LinearLayout part14 = ViewBindings.findChildViewById(rootView, id);
      if (part14 == null) {
        break missingId;
      }

      id = R.id.part_15;
      LinearLayout part15 = ViewBindings.findChildViewById(rootView, id);
      if (part15 == null) {
        break missingId;
      }

      id = R.id.part_17;
      LinearLayout part17 = ViewBindings.findChildViewById(rootView, id);
      if (part17 == null) {
        break missingId;
      }

      id = R.id.room_title;
      TextView roomTitle = ViewBindings.findChildViewById(rootView, id);
      if (roomTitle == null) {
        break missingId;
      }

      id = R.id.search_add_items;
      Button searchAddItems = ViewBindings.findChildViewById(rootView, id);
      if (searchAddItems == null) {
        break missingId;
      }

      id = R.id.search_arrow_blue;
      ImageView searchArrowBlue = ViewBindings.findChildViewById(rootView, id);
      if (searchArrowBlue == null) {
        break missingId;
      }

      id = R.id.search_arrow_green;
      ImageView searchArrowGreen = ViewBindings.findChildViewById(rootView, id);
      if (searchArrowGreen == null) {
        break missingId;
      }

      id = R.id.search_list_title;
      ImageView searchListTitle = ViewBindings.findChildViewById(rootView, id);
      if (searchListTitle == null) {
        break missingId;
      }

      id = R.id.search_space_blue;
      ImageView searchSpaceBlue = ViewBindings.findChildViewById(rootView, id);
      if (searchSpaceBlue == null) {
        break missingId;
      }

      id = R.id.search_space_green;
      ImageView searchSpaceGreen = ViewBindings.findChildViewById(rootView, id);
      if (searchSpaceGreen == null) {
        break missingId;
      }

      id = R.id.single_container;
      ScrollView singleContainer = ViewBindings.findChildViewById(rootView, id);
      if (singleContainer == null) {
        break missingId;
      }

      id = R.id.stg_n;
      TextView stgN = ViewBindings.findChildViewById(rootView, id);
      if (stgN == null) {
        break missingId;
      }

      id = R.id.str_n;
      TextView strN = ViewBindings.findChildViewById(rootView, id);
      if (strN == null) {
        break missingId;
      }

      RelativeLayout textView = (RelativeLayout) rootView;

      return new ItemListBinding((RelativeLayout) rootView, cardLayout, itN, nextRoomTitle, part14,
          part15, part17, roomTitle, searchAddItems, searchArrowBlue, searchArrowGreen,
          searchListTitle, searchSpaceBlue, searchSpaceGreen, singleContainer, stgN, strN,
          textView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
