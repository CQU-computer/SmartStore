// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySelfEditLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout PART1;

  @NonNull
  public final ConstraintLayout PART2;

  @NonNull
  public final ImageView addLayoutBtn;

  @NonNull
  public final Button addRoom;

  @NonNull
  public final TextView backBtn;

  @NonNull
  public final Button changeLayoutBtn;

  @NonNull
  public final TextView cntRoom;

  @NonNull
  public final TextView cntStg;

  @NonNull
  public final TextView curLayout;

  @NonNull
  public final ImageView imageView8;

  @NonNull
  public final ImageView imageView9;

  @NonNull
  public final Guideline line4;

  @NonNull
  public final LinearLayout linearLayout7;

  @NonNull
  public final LinearLayout myLayouts;

  @NonNull
  public final Guideline part45;

  @NonNull
  public final Guideline part46;

  @NonNull
  public final Guideline part47;

  @NonNull
  public final LinearLayout rooms;

  private ActivitySelfEditLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout PART1, @NonNull ConstraintLayout PART2,
      @NonNull ImageView addLayoutBtn, @NonNull Button addRoom, @NonNull TextView backBtn,
      @NonNull Button changeLayoutBtn, @NonNull TextView cntRoom, @NonNull TextView cntStg,
      @NonNull TextView curLayout, @NonNull ImageView imageView8, @NonNull ImageView imageView9,
      @NonNull Guideline line4, @NonNull LinearLayout linearLayout7,
      @NonNull LinearLayout myLayouts, @NonNull Guideline part45, @NonNull Guideline part46,
      @NonNull Guideline part47, @NonNull LinearLayout rooms) {
    this.rootView = rootView;
    this.PART1 = PART1;
    this.PART2 = PART2;
    this.addLayoutBtn = addLayoutBtn;
    this.addRoom = addRoom;
    this.backBtn = backBtn;
    this.changeLayoutBtn = changeLayoutBtn;
    this.cntRoom = cntRoom;
    this.cntStg = cntStg;
    this.curLayout = curLayout;
    this.imageView8 = imageView8;
    this.imageView9 = imageView9;
    this.line4 = line4;
    this.linearLayout7 = linearLayout7;
    this.myLayouts = myLayouts;
    this.part45 = part45;
    this.part46 = part46;
    this.part47 = part47;
    this.rooms = rooms;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySelfEditLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySelfEditLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_self_edit_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySelfEditLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.PART1;
      ConstraintLayout PART1 = ViewBindings.findChildViewById(rootView, id);
      if (PART1 == null) {
        break missingId;
      }

      id = R.id.PART2;
      ConstraintLayout PART2 = ViewBindings.findChildViewById(rootView, id);
      if (PART2 == null) {
        break missingId;
      }

      id = R.id.add_layout_btn;
      ImageView addLayoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (addLayoutBtn == null) {
        break missingId;
      }

      id = R.id.add_room;
      Button addRoom = ViewBindings.findChildViewById(rootView, id);
      if (addRoom == null) {
        break missingId;
      }

      id = R.id.back_btn;
      TextView backBtn = ViewBindings.findChildViewById(rootView, id);
      if (backBtn == null) {
        break missingId;
      }

      id = R.id.change_layout_btn;
      Button changeLayoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (changeLayoutBtn == null) {
        break missingId;
      }

      id = R.id.cnt_room;
      TextView cntRoom = ViewBindings.findChildViewById(rootView, id);
      if (cntRoom == null) {
        break missingId;
      }

      id = R.id.cnt_stg;
      TextView cntStg = ViewBindings.findChildViewById(rootView, id);
      if (cntStg == null) {
        break missingId;
      }

      id = R.id.cur_layout;
      TextView curLayout = ViewBindings.findChildViewById(rootView, id);
      if (curLayout == null) {
        break missingId;
      }

      id = R.id.imageView8;
      ImageView imageView8 = ViewBindings.findChildViewById(rootView, id);
      if (imageView8 == null) {
        break missingId;
      }

      id = R.id.imageView9;
      ImageView imageView9 = ViewBindings.findChildViewById(rootView, id);
      if (imageView9 == null) {
        break missingId;
      }

      id = R.id.line4;
      Guideline line4 = ViewBindings.findChildViewById(rootView, id);
      if (line4 == null) {
        break missingId;
      }

      id = R.id.linearLayout7;
      LinearLayout linearLayout7 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout7 == null) {
        break missingId;
      }

      id = R.id.my_layouts;
      LinearLayout myLayouts = ViewBindings.findChildViewById(rootView, id);
      if (myLayouts == null) {
        break missingId;
      }

      id = R.id.part45;
      Guideline part45 = ViewBindings.findChildViewById(rootView, id);
      if (part45 == null) {
        break missingId;
      }

      id = R.id.part46;
      Guideline part46 = ViewBindings.findChildViewById(rootView, id);
      if (part46 == null) {
        break missingId;
      }

      id = R.id.part47;
      Guideline part47 = ViewBindings.findChildViewById(rootView, id);
      if (part47 == null) {
        break missingId;
      }

      id = R.id.rooms;
      LinearLayout rooms = ViewBindings.findChildViewById(rootView, id);
      if (rooms == null) {
        break missingId;
      }

      return new ActivitySelfEditLayoutBinding((ConstraintLayout) rootView, PART1, PART2,
          addLayoutBtn, addRoom, backBtn, changeLayoutBtn, cntRoom, cntStg, curLayout, imageView8,
          imageView9, line4, linearLayout7, myLayouts, part45, part46, part47, rooms);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
