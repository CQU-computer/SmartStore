// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.GridLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EditItemCardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView buty;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final ImageView detectImg;

  @NonNull
  public final TextView detectRes;

  @NonNull
  public final TextView freq;

  @NonNull
  public final GridLayout gridLayout;

  @NonNull
  public final ImageView imageView6;

  @NonNull
  public final Guideline l1;

  @NonNull
  public final Guideline l2;

  @NonNull
  public final Guideline l3;

  @NonNull
  public final TextView ligt;

  @NonNull
  public final LinearLayout linearLayout6;

  @NonNull
  public final LinearLayout linearLayout8;

  @NonNull
  public final Guideline part34;

  @NonNull
  public final Guideline r1;

  @NonNull
  public final TextView size;

  @NonNull
  public final TextView space;

  @NonNull
  public final ImageView topImageView;

  @NonNull
  public final TextView urgn;

  @NonNull
  public final TextView wter;

  private EditItemCardBinding(@NonNull ConstraintLayout rootView, @NonNull TextView buty,
      @NonNull CardView cardView2, @NonNull ImageView detectImg, @NonNull TextView detectRes,
      @NonNull TextView freq, @NonNull GridLayout gridLayout, @NonNull ImageView imageView6,
      @NonNull Guideline l1, @NonNull Guideline l2, @NonNull Guideline l3, @NonNull TextView ligt,
      @NonNull LinearLayout linearLayout6, @NonNull LinearLayout linearLayout8,
      @NonNull Guideline part34, @NonNull Guideline r1, @NonNull TextView size,
      @NonNull TextView space, @NonNull ImageView topImageView, @NonNull TextView urgn,
      @NonNull TextView wter) {
    this.rootView = rootView;
    this.buty = buty;
    this.cardView2 = cardView2;
    this.detectImg = detectImg;
    this.detectRes = detectRes;
    this.freq = freq;
    this.gridLayout = gridLayout;
    this.imageView6 = imageView6;
    this.l1 = l1;
    this.l2 = l2;
    this.l3 = l3;
    this.ligt = ligt;
    this.linearLayout6 = linearLayout6;
    this.linearLayout8 = linearLayout8;
    this.part34 = part34;
    this.r1 = r1;
    this.size = size;
    this.space = space;
    this.topImageView = topImageView;
    this.urgn = urgn;
    this.wter = wter;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EditItemCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EditItemCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.edit_item_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EditItemCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buty;
      TextView buty = ViewBindings.findChildViewById(rootView, id);
      if (buty == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.detect_img;
      ImageView detectImg = ViewBindings.findChildViewById(rootView, id);
      if (detectImg == null) {
        break missingId;
      }

      id = R.id.detect_res;
      TextView detectRes = ViewBindings.findChildViewById(rootView, id);
      if (detectRes == null) {
        break missingId;
      }

      id = R.id.freq;
      TextView freq = ViewBindings.findChildViewById(rootView, id);
      if (freq == null) {
        break missingId;
      }

      id = R.id.gridLayout;
      GridLayout gridLayout = ViewBindings.findChildViewById(rootView, id);
      if (gridLayout == null) {
        break missingId;
      }

      id = R.id.imageView6;
      ImageView imageView6 = ViewBindings.findChildViewById(rootView, id);
      if (imageView6 == null) {
        break missingId;
      }

      id = R.id.l1;
      Guideline l1 = ViewBindings.findChildViewById(rootView, id);
      if (l1 == null) {
        break missingId;
      }

      id = R.id.l2;
      Guideline l2 = ViewBindings.findChildViewById(rootView, id);
      if (l2 == null) {
        break missingId;
      }

      id = R.id.l3;
      Guideline l3 = ViewBindings.findChildViewById(rootView, id);
      if (l3 == null) {
        break missingId;
      }

      id = R.id.ligt;
      TextView ligt = ViewBindings.findChildViewById(rootView, id);
      if (ligt == null) {
        break missingId;
      }

      id = R.id.linearLayout6;
      LinearLayout linearLayout6 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout6 == null) {
        break missingId;
      }

      id = R.id.linearLayout8;
      LinearLayout linearLayout8 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout8 == null) {
        break missingId;
      }

      id = R.id.part34;
      Guideline part34 = ViewBindings.findChildViewById(rootView, id);
      if (part34 == null) {
        break missingId;
      }

      id = R.id.r1;
      Guideline r1 = ViewBindings.findChildViewById(rootView, id);
      if (r1 == null) {
        break missingId;
      }

      id = R.id.size;
      TextView size = ViewBindings.findChildViewById(rootView, id);
      if (size == null) {
        break missingId;
      }

      id = R.id.space;
      TextView space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.topImageView;
      ImageView topImageView = ViewBindings.findChildViewById(rootView, id);
      if (topImageView == null) {
        break missingId;
      }

      id = R.id.urgn;
      TextView urgn = ViewBindings.findChildViewById(rootView, id);
      if (urgn == null) {
        break missingId;
      }

      id = R.id.wter;
      TextView wter = ViewBindings.findChildViewById(rootView, id);
      if (wter == null) {
        break missingId;
      }

      return new EditItemCardBinding((ConstraintLayout) rootView, buty, cardView2, detectImg,
          detectRes, freq, gridLayout, imageView6, l1, l2, l3, ligt, linearLayout6, linearLayout8,
          part34, r1, size, space, topImageView, urgn, wter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
