// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class InOutRcdBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout backcolor;

  @NonNull
  public final LinearLayout dateTimeBar;

  @NonNull
  public final LinearLayout page;

  @NonNull
  public final ImageView part20;

  @NonNull
  public final LinearLayout part21;

  @NonNull
  public final ImageView part22;

  @NonNull
  public final Guideline part32;

  @NonNull
  public final ImageView rcdChangeBtnDark;

  @NonNull
  public final ImageView rcdChangeBtnLight;

  @NonNull
  public final ImageView rcdDark;

  @NonNull
  public final Button rcdDarkReturnBtn;

  @NonNull
  public final ImageView rcdLight;

  @NonNull
  public final ScrollView scrollView4;

  private InOutRcdBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout backcolor,
      @NonNull LinearLayout dateTimeBar, @NonNull LinearLayout page, @NonNull ImageView part20,
      @NonNull LinearLayout part21, @NonNull ImageView part22, @NonNull Guideline part32,
      @NonNull ImageView rcdChangeBtnDark, @NonNull ImageView rcdChangeBtnLight,
      @NonNull ImageView rcdDark, @NonNull Button rcdDarkReturnBtn, @NonNull ImageView rcdLight,
      @NonNull ScrollView scrollView4) {
    this.rootView = rootView;
    this.backcolor = backcolor;
    this.dateTimeBar = dateTimeBar;
    this.page = page;
    this.part20 = part20;
    this.part21 = part21;
    this.part22 = part22;
    this.part32 = part32;
    this.rcdChangeBtnDark = rcdChangeBtnDark;
    this.rcdChangeBtnLight = rcdChangeBtnLight;
    this.rcdDark = rcdDark;
    this.rcdDarkReturnBtn = rcdDarkReturnBtn;
    this.rcdLight = rcdLight;
    this.scrollView4 = scrollView4;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static InOutRcdBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static InOutRcdBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.in_out_rcd, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static InOutRcdBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout backcolor = (ConstraintLayout) rootView;

      id = R.id.date_time_bar;
      LinearLayout dateTimeBar = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeBar == null) {
        break missingId;
      }

      id = R.id.page;
      LinearLayout page = ViewBindings.findChildViewById(rootView, id);
      if (page == null) {
        break missingId;
      }

      id = R.id.part_20;
      ImageView part20 = ViewBindings.findChildViewById(rootView, id);
      if (part20 == null) {
        break missingId;
      }

      id = R.id.part_21;
      LinearLayout part21 = ViewBindings.findChildViewById(rootView, id);
      if (part21 == null) {
        break missingId;
      }

      id = R.id.part_22;
      ImageView part22 = ViewBindings.findChildViewById(rootView, id);
      if (part22 == null) {
        break missingId;
      }

      id = R.id.part32;
      Guideline part32 = ViewBindings.findChildViewById(rootView, id);
      if (part32 == null) {
        break missingId;
      }

      id = R.id.rcd_change_btn_dark;
      ImageView rcdChangeBtnDark = ViewBindings.findChildViewById(rootView, id);
      if (rcdChangeBtnDark == null) {
        break missingId;
      }

      id = R.id.rcd_change_btn_light;
      ImageView rcdChangeBtnLight = ViewBindings.findChildViewById(rootView, id);
      if (rcdChangeBtnLight == null) {
        break missingId;
      }

      id = R.id.rcd_dark;
      ImageView rcdDark = ViewBindings.findChildViewById(rootView, id);
      if (rcdDark == null) {
        break missingId;
      }

      id = R.id.rcd_dark_return_btn;
      Button rcdDarkReturnBtn = ViewBindings.findChildViewById(rootView, id);
      if (rcdDarkReturnBtn == null) {
        break missingId;
      }

      id = R.id.rcd_light;
      ImageView rcdLight = ViewBindings.findChildViewById(rootView, id);
      if (rcdLight == null) {
        break missingId;
      }

      id = R.id.scrollView4;
      ScrollView scrollView4 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView4 == null) {
        break missingId;
      }

      return new InOutRcdBinding((ConstraintLayout) rootView, backcolor, dateTimeBar, page, part20,
          part21, part22, part32, rcdChangeBtnDark, rcdChangeBtnLight, rcdDark, rcdDarkReturnBtn,
          rcdLight, scrollView4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
